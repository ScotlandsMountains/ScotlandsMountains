using System.Collections.Generic;
using ScotlandsMountains.Data.Seeding.DatabaseOfBritishAndIrishHills.Wrappers;

namespace ScotlandsMountains.Data.Seeding.DatabaseOfBritishAndIrishHills.Factories
{
    internal class ClassificationFactory
    {
        public static List<ClassificationWrapper> Build()
        {
            return new List<ClassificationWrapper>
                {
                    new ClassificationWrapper(x => x.IsMarilyn, "Marilyn"),
                    new ClassificationWrapper(x => x.IsMarilynTwin, "Marilyn twin"),
                    new ClassificationWrapper(x => x.IsHump, "Hump"),
                    new ClassificationWrapper(x => x.IsHumpTwin, "Hump twin"),
                    new ClassificationWrapper(x => x.IsMunro, "Munro"),
                    new ClassificationWrapper(x => x.IsMunroTop, "Munro top"),
                    new ClassificationWrapper(x => x.IsMurdo, "Murdo"),
                    new ClassificationWrapper(x => x.IsFurth, "Furth"),
                    new ClassificationWrapper(x => x.IsCorbett, "Corbett"),
                    new ClassificationWrapper(x => x.IsCorbettTop, "Corbett top"),
                    new ClassificationWrapper(x => x.IsCorbettTopOfMunro, "Corbett top of Munro"),
                    new ClassificationWrapper(x => x.IsCorbettTopOfCorbett, "Corbett top of Corbett"),
                    new ClassificationWrapper(x => x.IsGraham, "Graham"),
                    new ClassificationWrapper(x => x.IsGrahamTop, "Graham top"),
                    new ClassificationWrapper(x => x.IsGrahamTopOfMunro, "Graham top of Munro"),
                    new ClassificationWrapper(x => x.IsGrahamTopOfCorbett, "Graham top of Corbett"),
                    new ClassificationWrapper(x => x.IsGrahamTopOfGraham, "Graham top of Graham"),
                    new ClassificationWrapper(x => x.IsGrahamTopOfHewitt, "Graham top of Hewitt"),
                    new ClassificationWrapper(x => x.IsDonald, "Donald"),
                    new ClassificationWrapper(x => x.IsDonaldTop, "Donald top"),
                    new ClassificationWrapper(x => x.IsHewitt, "Hewitt"),
                    new ClassificationWrapper(x => x.IsNuttal, "Nuttal"),
                    new ClassificationWrapper(x => x.IsDillon, "Dillon"),
                    new ClassificationWrapper(x => x.IsArderin, "Arderin"),
                    new ClassificationWrapper(x => x.IsVandeleurLynam, "Vandeleur-Lynam"),
                    new ClassificationWrapper(x => x.IsTump, "Tump"),
                    new ClassificationWrapper(x => x.IsTumpTwin, "Tump twin"),
                    new ClassificationWrapper(x => x.IsSim, "Sim"),
                    new ClassificationWrapper(x => x.IsDewey, "Dewey"),
                    new ClassificationWrapper(x => x.IsDonalDewey, "Donald Dewey"),
                    new ClassificationWrapper(x => x.IsHighlandFive, "Highland Five"),
                    new ClassificationWrapper(x => x.IsMyrddynDewey, "Myrddyn Dewey"),
                    new ClassificationWrapper(x => x.IsTump400To499M, "Tump (400m to 499m)"),
                    new ClassificationWrapper(x => x.IsTump300To399M, "Tump (300m to 399m)"),
                    new ClassificationWrapper(x => x.IsTump200To299M, "Tump (200m to 299m)"),
                    new ClassificationWrapper(x => x.IsTump100To199M, "Tump (100m to 199m)"),
                    new ClassificationWrapper(x => x.IsTump100To199MTwin, "Tump (100m to 199m) twin"),
                    new ClassificationWrapper(x => x.IsTump0To99M, "Tump (0m to 99m)"),
                    new ClassificationWrapper(x => x.IsWainwright, "Wainwright"),
                    new ClassificationWrapper(x => x.IsWainwrightOutlyingFell, "Wainwright outlying fell"),
                    new ClassificationWrapper(x => x.IsBirkett, "Birkett"),
                    new ClassificationWrapper(x => x.IsCountyTopHistoric, "County top (historic)"),
                    new ClassificationWrapper(x => x.IsCountyTopHistoricTwin, "County top (historic) twin"),
                    new ClassificationWrapper(x => x.IsCountyTopCurrentCountyAndUnitaryAuthority, "County top (current county and unitary authority)"),
                    new ClassificationWrapper(x => x.IsCountyTopCurrentCountyAndUnitaryAuthorityTwin, "County top (current county and unitary authority) twin"),
                    new ClassificationWrapper(x => x.IsCountyTopAdministrative, "County top (administrative)"),
                    new ClassificationWrapper(x => x.IsCountyTopAdministrativeTwin, "County top (administrative) twin"),
                    new ClassificationWrapper(x => x.IsCountyTopLondonBorough, "County top (London borough)"),
                    new ClassificationWrapper(x => x.IsCountyTopLondonBoroughTwin, "County top (London borough) twin"),
                    new ClassificationWrapper(x => x.IsSignificantIslandOfBritain, "Significant island of Britain"),
                    new ClassificationWrapper(x => x.IsSubsiduaryMarilyn, "Subsiduary Marilyn"),
                    new ClassificationWrapper(x => x.IsSubsiduaryHump, "Subsiduary Hump"),
                    new ClassificationWrapper(x => x.IsSubsiduaryMurdo, "Subsiduary Murdo"),
                    new ClassificationWrapper(x => x.IsSubsiduaryCorbettTop, "Subsiduary Corbett top"),
                    new ClassificationWrapper(x => x.IsSubsiduaryGrahamTop, "Subsiduary Graham top"),
                    new ClassificationWrapper(x => x.IsSubsiduaryHewitt, "Subsiduary Hewitt"),
                    new ClassificationWrapper(x => x.IsSubsiduaryDewey, "Subsiduary Dewey"),
                    new ClassificationWrapper(x => x.IsSubsiduaryDonaldDewey, "Subsiduary Donald Dewey"),
                    new ClassificationWrapper(x => x.IsSubsiduaryHighlandFive, "Subsiduary Highland Five"),
                    new ClassificationWrapper(x => x.IsSubsiduaryMyrddynDewey, "Subsiduary Myrddyn Dewey"),
                    new ClassificationWrapper(x => x.IsSubsiduaryTump400To499M, "Subsiduary Tump (400m to 499m)"),
                    new ClassificationWrapper(x => x.IsDeletedMunroTop, "Deleted Munro top"),
                    new ClassificationWrapper(x => x.IsDeletedCorbett, "Deleted Corbett"),
                    new ClassificationWrapper(x => x.IsDeletedGraham, "Deleted Graham"),
                    new ClassificationWrapper(x => x.IsDeletedNuttal, "Deleted Nuttal"),
                    new ClassificationWrapper(x => x.IsDeletedDonaldTop, "Deleted Donald top"),
                    new ClassificationWrapper(x => x.IsSynge, "Synge"),
                    new ClassificationWrapper(x => x.IsFellranger, "Fellranger"),
                    new ClassificationWrapper(x => x.IsBuxtonAndLewis, "Buxton and Lewis"),
                    new ClassificationWrapper(x => x.IsBridge, "Bridge"),
                    new ClassificationWrapper(x => x.IsTrail100, "Trail 100"),
                    new ClassificationWrapper(x => x.IsCarn, "Carn"),
                    new ClassificationWrapper(x => x.IsBinnion, "Binnion"),
                    new ClassificationWrapper(x => x.IsOther, "Other"),
                    new ClassificationWrapper(x => x.IsUnclassified, "Unclassified")
                };
        }
    }
}